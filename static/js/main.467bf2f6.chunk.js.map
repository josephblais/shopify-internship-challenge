{"version":3,"sources":["components/SearchBar.jsx","hooks/useDebounce.js","helpers/getMovies.js","components/Button.jsx","components/MovieList.jsx","components/Banner.jsx","components/Lists.jsx","App.js","reportWebVitals.js","index.js"],"names":["HiddenLabel","styled","label","SearchBar","input","Searchbar","onSearch","useState","value","setValue","term","ms","debounced","setDebounced","useEffect","timeout","setTimeout","clearTimeout","useDebounce","onSubmit","event","preventDefault","htmlFor","className","type","id","placeholder","onChange","target","name","API_KEY","process","OMDB_URL","query","a","encodedQuery","trim","replace","fetch","then","res","json","results","Search","movies","ActionButton","button","white","Button","props","click","disable","onClick","disabled","ListContainer","div","smallWidth","List","ul","ListTitle","h3","Year","span","MovieList","handleNomination","disableButton","buttonName","title","map","result","imdbID","Title","BannerAnimation","keyframes","ThumbAnimation","AnimatedBanner","BigThumb","Banner","visible","setVisible","clearSearch","length","ListsContainer","fullWidth","Lists","nominations","addNomination","removeNomination","nominationsExist","resultsExist","App","setTerm","setResults","setNominations","getMovies","uniqueResults","catch","unfilteredResults","Set","JSON","stringify","string","parse","movie","prev","filter","nomination","some","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.467bf2f6.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport useDebounce from '../hooks/useDebounce';\nimport styled from 'styled-components';\n\nconst HiddenLabel = styled.label`\ndisplay: none\n`;\n\nconst SearchBar = styled.input`\n  background: none;\n  border: none;\n  border-bottom: 5px solid white;\n  filter: drop-shadow(-30px 20px 15px #000000);\n  height: 2em;\n  max-width: 80%;\n  color: black;\n  font-size: 2em;\n  &:focus { outline: none};\n  &::placeholder { color: white; opacity: 1}\n`;\n\nexport default function Searchbar({onSearch}) {\n  const [value, setValue] = useState(\"\");\n\n  const term = useDebounce(value, 500);\n  \n  // const onSearch = useCallback(props.onSearch, [term]);\n\n  useEffect(() => {\n    onSearch(term);\n  }, [term, onSearch]);\n\n\n  return (\n    <>\n      <form onSubmit={(event) => event.preventDefault()}>\n        {/* This label is hidden but is visible for screen readers */}\n        <HiddenLabel htmlFor=\"search-bar\">\n          <span className=\"visually-hidden\">Search Films</span>\n        </HiddenLabel>\n        <SearchBar\n          type=\"text\"\n          id=\"search-bar\"\n          placeholder=\"Search Films\"\n          onChange={(event) => setValue(event.target.value)}\n          name=\"s\"\n        />\n      </form>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport default function useDebounce(input, ms) {\n  const [debounced, setDebounced] = useState(\"\");\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setDebounced(input), ms);\n    return () => clearTimeout(timeout);\n  }, [input, ms]);\n\n  return debounced;\n}\n","const API_KEY = process.env.REACT_APP_API_KEY;\nconst OMDB_URL = `https://www.omdbapi.com/`;\n\nexport default async function getMoviesByTitle(query) {\n  const encodedQuery = query.trim().replace(\" \", \"+\")\n  const movies = await fetch(`${OMDB_URL}?apikey=${API_KEY}&s=${encodedQuery}&type=movie&page=1`)\n                      .then(res => res.json())\n                      .then(results => results.Search)\n\n  return movies;\n}\n","import styled from 'styled-components';\n\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 2em;\n  cursor: pointer;\n\n\n  ${({ white }) => white && `\n    color: white;\n  `}\n`;\n\nexport default function Button(props) {\n  const {click, name, disable, white} = props;\n\n  return (\n    <ActionButton \n      onClick={click} \n      disabled={disable}\n      white={white}\n      >\n      {name}\n    </ActionButton>\n  )\n}","import Button from './Button';\nimport styled from 'styled-components';\n\nconst ListContainer = styled.div`\n  box-shadow: -2rem 2rem 0px 0px #011502;\n  // box-shadow: 5px 5px 15px 5px #000;\n  // filter: drop-shadow(-2em -1em 2px red);\n  background: #f7fe72;\n  color: black;\n  border: 5px solid white;\n  border-radius: 10px;\n  margin-top: 4rem;\n  width: 50vw;\n\n  ${({ smallWidth }) => smallWidth && `\n    // background: blue;\n    width: 30vw;\n  `}\n`;\n\nconst List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 30px;\n`;\n\nconst ListTitle = styled.h3`\n  padding-left: 1em;\n`;\n\nconst Year = styled.span`\nopacity: 20%;\nfont-size: 1.5em;\nposition: relative;\nleft: -20px;\n`;\n\nexport default function MovieList(props) {\n  const { smallWidth, results, handleNomination, disableButton, buttonName, title } = props;\n  return (\n    <ListContainer smallWidth={smallWidth}>\n      <ListTitle>{title}</ListTitle>\n      <List>\n        {results.map((result) => {\n          return (\n            <li key={result.imdbID}>\n              <Button\n                click={() => handleNomination(result)}\n                name={buttonName}\n                disable={disableButton(result.imdbID)}\n              />\n              <em>{result.Title}</em> \n              <Year>{result.Year}</Year>\n            </li>\n          );\n        })}\n      </List>\n    </ListContainer>\n  );\n}\n","import styled from \"styled-components\";\nimport { keyframes } from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport Button from \"./Button\";\n\nconst BannerAnimation = keyframes`\n  from {  \n    transform: translateX(100%); opacity: 0.8; \n  }\n  to {\n    transform: translateX(0%); opacity: 1\n  }\n `;\n\nconst ThumbAnimation = keyframes`\n  0% {\n    font-size: 1vh\n  }\n  80% {\n    font-size: 80vh\n  }\n  100% {\n    opacity: 0%\n  }\n`;\n\nconst AnimatedBanner = styled.div`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  box-shadow: -5px 12px 15px 5px rgba(0, 0, 0, 0.3);\n  animation-name: ${BannerAnimation};\n  animation-duration: 1.5s;\n  animation-iteration-count: 1;\n  animation-timing-function: ease-out;\n  z-index: 100;\n  background: black;\n  // border: 5px dashed white;\n  color: white;\n  border-radius: 10px;\n  padding: 0px 10px 0px 10px;\n  text-align: center;\n`;\n\nconst BigThumb = styled.span`\n  position: fixed;\n  top: 25vh;\n  // right: 0;\n  z-index: 101;\n  // opacity: 0;\n  animation-name: ${ThumbAnimation};\n  animation-duration: 1s;\n  animation-iteration-count: 1;\n  animation-timing-function: ease-out;\n`;\n\nexport default function Banner(props) {\n  const [visible, setVisible] = useState(true);\n  const {clearSearch, results} = props;\n\n  // Disable the thumb after a second.\n  useEffect(() => {\n    setTimeout(() => {\n      setVisible(false);\n    }, 999);\n  });\n\n  return (\n    <>\n      <AnimatedBanner>\n        <h5>\n          Congratulations! <br /> You've selected all your nominations!\n        </h5>\n      { results.length > 0 && <Button click={clearSearch} white={true} name={\"Admire them ☜(꒡⌓꒡)\"}/>}\n      </AnimatedBanner>\n      {visible && <BigThumb>👍</BigThumb>}\n    </>\n  );\n}\n","import MovieList from \"./MovieList\";\nimport styled from \"styled-components\";\n\nconst ListsContainer = styled.div`\nposition: relative;\ndisplay: flex;\njustify-content: space-around;\nalign-items: flex-start;\n\n${({ fullWidth }) => fullWidth && `\n  width: 80%;\n  `}\n`;\n\nexport default function Lists(props) {\n  const {\n    results,\n    nominations,\n    term,\n    addNomination,\n    removeNomination,\n    disableButton,\n  } = props;\n\n  const nominationsExist = () => {\n    return nominations.length > 0;\n  };\n  \n  const resultsExist = () => {\n    return results.length > 0;\n  };\n\n  return (\n    <ListsContainer fullWidth={nominationsExist() && resultsExist()}>\n      {results.length > 0 && (\n        <MovieList\n          smallWidth={nominationsExist()}\n          results={results}\n          handleNomination={addNomination}\n          buttonName={\"+\"}\n          disableButton={disableButton}\n          title={`Movies about ${term}`}\n        />\n      )}\n\n      {nominations.length > 0 && (\n        <MovieList\n          smallWidth={resultsExist()}\n          results={nominations}\n          handleNomination={removeNomination}\n          buttonName={\"-\"}\n          disableButton={() => false}\n          title={\"Nominations\"}\n        />\n      )}\n    </ListsContainer>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport getMovies from './helpers/getMovies';\nimport MovieList from './components/MovieList';\nimport Banner from './components/Banner';\nimport Lists from './components/Lists';\n\nfunction App() {\n  const [term, setTerm] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [nominations, setNominations] = useState([]);\n\n  useEffect(() => {\n    // Perform API call on search bar input\n    if (term) {\n      getMovies(term)\n        .then(\n          (results) => results.length > 1 && setResults(uniqueResults(results))\n        )\n        .catch(() => setResults([]));\n    }\n    // Reset results to an empty array if the search bar is cleared\n    if (term.length < 3) {\n      setResults([]);\n    }\n  }, [term]);\n\n  const uniqueResults = (unfilteredResults) => {\n    // Sometimes the API returns two identical results.\n    // Here, we use the Set class to filter out these identical results.\n    // Since each object will by default have a unique object reference,\n    // we need to convert the data into a JSON string for Set to work properly˛\n    const unique = [\n      ...new Set(unfilteredResults.map((result) => JSON.stringify(result))),\n    ].map((string) => JSON.parse(string));\n    return unique;\n  };\n\n  const addNomination = (movie) => {\n    setNominations((prev) => [...prev, movie]);\n  };\n\n  const removeNomination = (movie) => {\n    setNominations(\n      nominations.filter((nomination) => nomination.imdbID != movie.imdbID)\n    );\n  };\n\n  const disableButton = (id) => {\n    return (\n      nominations.some((nomination) => nomination.imdbID === id) ||\n      nominations.length === 5\n    );\n  };\n\n  const clearSearch = () => {\n    setResults([]);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SearchBar onSearch={(term) => setTerm(term)} />\n\n        {nominations.length === 5 && <Banner results={results} clearSearch={clearSearch}/>}\n\n        <Lists \n          results={results}\n          nominations={nominations}\n          term={term}\n          addNomination={addNomination}\n          removeNomination={removeNomination}\n          disableButton={disableButton}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}